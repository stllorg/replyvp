worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;


    server {
        listen 80;
        server_name localhost;

        # Serves static files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # AUTH CONTROLLER
        # Forward POST requests to user registration
        location /api/auth/register {
            # Check if the request method is POST
            if ($request_method != POST) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/auth/register;
        }


        # Forward POST requests to login
        location /api/auth/login {
            if ($request_method != POST) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/auth/login;
        }

        # Forward GET requests to verify token data
        location /api/auth/authenticate {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/auth/authenticate;
        }

        # END AUTH CONTROLLER

        # TICKET CONTROLLER
        # Forward POST requests to submit a new ticket
        location /api/tickets {
            if ($request_method != POST) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets;
        }

        # Forward GET requests to fetch ticket data
        location ~ ^/api/tickets/(.*)$ {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/$1;
        }


        # Forward GET requests to fetch all tickets with status OPEN
        location ~ ^/api/tickets/open {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/open;
        }

        # Forward GET requests to fetch all tickets created by a user
        location ~ ^/api/tickets/user/(.*)$ {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/user/$1;
        }


        # Forward GET requests to fetch all tickets where a user has talked/commented
        location ~ ^/api/tickets/user/(.*)$/tickets {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/user/$1/tickets;
        }

        # Forward PUT requests to update a ticket
        location /api/tickets/(.*)$ {
            if ($request_method != PUT) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/$1;
        }

        # Forward PUT requests to archive a ticket ( set ticket status to closed)
        location /api/tickets/(.*)$/archive {
            if ($request_method != PUT) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/$1/archive;
        }

        # Forward DELETE requests to delete a ticket
        location /api/tickets/(.*)$ {
            if ($request_method != DELETE) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/$1;
        }

        # END TICKET CONTROLLER

        # MESSAGE Controller
        # Forward POST requests to comment a ticket
        location /api/messages/(.*)$ {
            if ($request_method != POST) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/messages/$1;
        }

        # Forward GET requests to get a message by id
        location /api/messages/(.*)$ {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/messages/$1;
        }

        # Forward DELETE requests to delete a message by id
        location /api/messages/(.*)$ {
            if ($request_method != DELETE) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/messages/$1;
        }

        # Forward GET requests to get all messages in a ticket
        location /api/messages/ticket/(.*)$ {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/messages/ticket/$1;
        }

        # END MESSAGE CONTROLLER
        # USER CONTROLLER
        # Forward POST requests to CREATE a user from admin panel
        location /api/users {
            if ($request_method != POST) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/users;
        }

        # Forward DELETE requests to delete a user by id
        location /api/users/(.*)$ {
            if ($request_method != DELETE) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/users/$1;
        }

        # Forward GET requests to get all users - requires admin role
        location /api/users {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/users;
        }

        # Forward GET requests to get a user by id
        location /api/users/(.*)$ {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/users/$1;
        }

        # Forward GET requests to get all roles from a user by user id
        location /api/users/(.*)$/roles {
            if ($request_method != GET) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/users/$1/roles;
        }
        
        # Forward PUT requests to update user roles
        location /api/users/(.*)$/roles {
            if ($request_method != PUT) {
                return 405;
            }
            # Forward the request to the 'web' service
            proxy_pass http://web:8080/tickets/$1;
        }


        # END USER CONTROLLER
    }
}