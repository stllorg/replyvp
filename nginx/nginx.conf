events {
    worker_connections  1024;
}

http {
     # Adiciona os tipos MIME para arquivos estáticos
    types {
        text/html                             html;
        text/css                              css;
        text/javascript                       js mjs;
        image/jpeg                            jpeg jpg;
        image/png                             png;
    }

    default_type  application/octet-stream;

    # Carrega a biblioteca Lua para JWT
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";

    server {
        listen 80;

        # Serve os arquivos estáticos do frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Rotas sem autenticação
        location ~ ^/(auth/register|auth/login) {
            proxy_pass http://web:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Rotas autenticadas
        location ~ ^/(auth/authenticate|tickets/|users/) {
            # Executa o script Lua para validar o JWT antes de passar a requisição
            access_by_lua_block {
                local jwt = require("nginx-jwt")
                local key_path = "/run/secrets/public_key_secret"
                local ok, err = jwt.auth(key_path)
                if not ok then
                    ngx.log(ngx.ERR, "JWT validation failed: ", err)
                    return ngx.exit(401)
                end
            }
            
            proxy_pass http://web:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}